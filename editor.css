body {
    margin: 0;
    height: 100vh;
    background-color: #1a1a2e;
    font-family: sans-serif;
}

[hidden=""], [hidden="hidden"] {
    display: none !important;
}

#maps-list {
    list-style-type: none;
}

#editor {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
}

#map, #pano {
    height: 50%;
    aspect-ratio: 16 / 9;
    background: none !important;
}

.map-control {
    margin: 10px;
}

.map-control-mimic {
    display: table-cell;
    height: 40px;
    padding: 0px 17px;
    border: 0px none;
    border-radius: 2px;
    text-align: center;
    vertical-align: middle;
    background: white;
    box-shadow: rgba(0, 0, 0, 0.3) 0px 1px 4px -1px;
    color: rgb(86, 86, 86);
    font-size: 18px;
    user-select: none;
}

.map-control-hover {
    background: white;
    padding: 10px;
}

.pano-control {
    
}

#guides {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    aspect-ratio: 16 / 9;
    pointer-events: none;
    --physical-pixel-size: 1px;
    --stripe-width: calc(5 * var(--physical-pixel-size));
}

.guide-normal, .guide-diff, .reticle {
    position: absolute;
}

.guide-diff {
    mix-blend-mode: difference;
}

.guide-normal.guide-vertical, .guide-normal.reticle-vertical {
    background-image: repeating-linear-gradient(
        black, 
        black var(--stripe-width), 
        white var(--stripe-width), 
        white calc(2*var(--stripe-width)),
        transparent calc(2*var(--stripe-width)),
        transparent calc(3*var(--stripe-width))
    );
}

.guide-normal.guide-horizontal, .guide-normal.reticle-horizontal {
    background-image: repeating-linear-gradient(
        90deg,
        black, 
        black var(--stripe-width), 
        white var(--stripe-width), 
        white calc(2*var(--stripe-width)),
        transparent calc(2*var(--stripe-width)),
        transparent calc(3*var(--stripe-width))
    );
}

.guide-diff.guide-vertical, .guide-diff.reticle-vertical {
    background-image: repeating-linear-gradient(
        transparent, 
        transparent calc(2*var(--stripe-width)),
        white calc(2*var(--stripe-width)),
        white calc(3*var(--stripe-width))
    );
}

.guide-diff.guide-horizontal, .guide-diff.reticle-horizontal {
    background-image: repeating-linear-gradient(
        90deg,
        transparent, 
        transparent calc(2*var(--stripe-width)),
        white calc(2*var(--stripe-width)),
        white calc(3*var(--stripe-width))
    );
}

.guide-horizontal {
    left: 0;
    height: var(--physical-pixel-size);
    width: 100%;
}

.upper-3rd {
    top: calc(100% / 3 -  var(--physical-pixel-size) / 2);
}

.lower-3rd {
    bottom: calc(100% / 3 -  var(--physical-pixel-size) / 2);
}

.guide-vertical {
    top: 0;
    width: var(--physical-pixel-size);
    height: 100%;
}

._10-7-left {
    left: calc((100% * (1 - 9/16 * 10/7) - var(--physical-pixel-size)) / 2);
}

._10-7-right {
    right: calc((100% * (1 - 9/16 * 10/7) - var(--physical-pixel-size)) / 2);
}

._4-3-left {
    left: calc((100% * (1 - 9/16 * 4/3) - var(--physical-pixel-size)) / 2);
}

._4-3-right {
    right: calc((100% * (1 - 9/16 * 4/3) - var(--physical-pixel-size)) / 2);
}

.reticle {
    --reticle-length: calc(16 * var(--physical-pixel-size));
    --reticle-thickness: calc(2 * var(--physical-pixel-size));
}

.reticle-outer {
    background: transparent;
    outline: black solid var(--physical-pixel-size);
}

.reticle-inner {
    background: white;
    mix-blend-mode: difference;
}

.reticle-horizontal {
    left: calc(50% - var(--reticle-length) / 2);
    top: calc(50% - var(--reticle-thickness) / 2);
    width: var(--reticle-length);
    height: var(--reticle-thickness);
}

.reticle-vertical {
    left: calc(50% - var(--reticle-thickness) / 2);
    top: calc(50% - var(--reticle-length) / 2);
    width: var(--reticle-thickness);
    height: var(--reticle-length);
}

#right {
    position: absolute;
    top: 0;
    left: calc(100vh * 16 / 18);
    height: 100vh;
}

#right > div {
    height: 50vh;
    padding: 5px 0 5px 10px;
    box-sizing: border-box;
}

/*
    Using a lower-specificity selector to reduce the weight from 1-0-1 to
    0-1-1, to prevent it from overriding the #count-* selectors below.
    Being a descendant of #right is more a class than an ID anyways.
*/
div[id="right"] label, div[id="right"] span {
    color: hsla(0,0%,100%,.6);
    font-size: 11pt;
}

#right input {
    text-overflow: ellipsis;
}

#mapID, #panoid {
    font-family: monospace;
}

#changes > .count-added, #save-status.success {
    color: rgba(0,255,0,.6);
}

#changes > .count-deleted, #save-status.failure {
    color: rgba(255,51,51,.8);
}

#changes > .count-modified {
    color: rgba(218, 165, 32, .8);
}

#right input[type="number"] {
    -moz-appearance: textfield;
}
#right input[type="number"]::-webkit-outer-spin-button,
#right input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

#modals {
    display: grid;
    place-items: center;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
}

#pos-override-popup {
    position: absolute;
    top: 0;
    height: 100%;
    width: 100%;
    z-index: 100;
    background-color: rgba(0, 0, 0, 0.75);
}

.override-popup-layer {
    position: absolute;
    left: 10%;
    top: 10%;
    width: 80%;
    height: 80%;
    z-index: 0;
    opacity: 1;
}

.override-popup-layer.override-popup-foreground {
    z-index: 1;
    opacity: var(--override-popup-fg-opacity);
}

#override-popup-underlay-controls {
    position: absolute;
    top: 90%;
    left: 10%;
}

#override-popup-cancel {
    position: absolute;
    bottom: 90%;
    right: 10%;
}

#import-modal, #targets-modal {
    z-index: 100;
    background-color: black;
    padding: 20px;
}